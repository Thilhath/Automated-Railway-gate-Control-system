

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 08 23:05:47 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     nosup@@$_$_CONFIG	set	0	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0007                     _PORTC	set	7
   170     0006                     _PORTB	set	6
   171     0008                     _PORTD	set	8
   172     0042                     _RD2	set	66
   173     0041                     _RD1	set	65
   174     0040                     _RD0	set	64
   175     0086                     _TRISB	set	134
   176     0087                     _TRISC	set	135
   177     0088                     _TRISD	set	136
   178                           
   179                           	psect	strings
   180     0003                     __pstrings:
   181     0003                     stringtab:
   182     0003                     __stringtab:
   183     0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186     0003                     stringdir:
   187     0003  3000               	movlw	high stringdir
   188     0004  008A               	movwf	10
   189     0005  0804               	movf	4,w
   190     0006  0A84               	incf	4,f
   191     0007  0782               	addwf	2,f
   192     0008                     __stringbase:
   193     0008  3400               	retlw	0
   194     0009                     __end_of__stringtab:
   195     0009                     STR_1:
   196     0009  3452               	retlw	82	;'R'
   197     000A  3461               	retlw	97	;'a'
   198     000B  3469               	retlw	105	;'i'
   199     000C  346C               	retlw	108	;'l'
   200     000D  3477               	retlw	119	;'w'
   201     000E  3461               	retlw	97	;'a'
   202     000F  3479               	retlw	121	;'y'
   203     0010  3420               	retlw	32	;' '
   204     0011  3443               	retlw	67	;'C'
   205     0012  3472               	retlw	114	;'r'
   206     0013  346F               	retlw	111	;'o'
   207     0014  3473               	retlw	115	;'s'
   208     0015  3473               	retlw	115	;'s'
   209     0016  3469               	retlw	105	;'i'
   210     0017  346E               	retlw	110	;'n'
   211     0018  3467               	retlw	103	;'g'
   212     0019  3400               	retlw	0
   213     001A                     STR_4:
   214     001A  344E               	retlw	78	;'N'
   215     001B  3465               	retlw	101	;'e'
   216     001C  3461               	retlw	97	;'a'
   217     001D  3472               	retlw	114	;'r'
   218     001E  3420               	retlw	32	;' '
   219     001F  3474               	retlw	116	;'t'
   220     0020  346F               	retlw	111	;'o'
   221     0021  3420               	retlw	32	;' '
   222     0022  3463               	retlw	99	;'c'
   223     0023  3472               	retlw	114	;'r'
   224     0024  346F               	retlw	111	;'o'
   225     0025  3473               	retlw	115	;'s'
   226     0026  3473               	retlw	115	;'s'
   227     0027  3469               	retlw	105	;'i'
   228     0028  346E               	retlw	110	;'n'
   229     0029  3467               	retlw	103	;'g'
   230     002A  3400               	retlw	0
   231     002B                     STR_8:
   232     002B  3447               	retlw	71	;'G'
   233     002C  3461               	retlw	97	;'a'
   234     002D  3474               	retlw	116	;'t'
   235     002E  3465               	retlw	101	;'e'
   236     002F  3420               	retlw	32	;' '
   237     0030  3469               	retlw	105	;'i'
   238     0031  3473               	retlw	115	;'s'
   239     0032  3420               	retlw	32	;' '
   240     0033  344F               	retlw	79	;'O'
   241     0034  3470               	retlw	112	;'p'
   242     0035  3465               	retlw	101	;'e'
   243     0036  346E               	retlw	110	;'n'
   244     0037  3469               	retlw	105	;'i'
   245     0038  346E               	retlw	110	;'n'
   246     0039  3467               	retlw	103	;'g'
   247     003A  3400               	retlw	0
   248     003B                     STR_3:
   249     003B  3441               	retlw	65	;'A'
   250     003C  3474               	retlw	116	;'t'
   251     003D  3474               	retlw	116	;'t'
   252     003E  3461               	retlw	97	;'a'
   253     003F  346E               	retlw	110	;'n'
   254     0040  3474               	retlw	116	;'t'
   255     0041  3469               	retlw	105	;'i'
   256     0042  346F               	retlw	111	;'o'
   257     0043  346E               	retlw	110	;'n'
   258     0044  3420               	retlw	32	;' '
   259     0045  3474               	retlw	116	;'t'
   260     0046  3472               	retlw	114	;'r'
   261     0047  3461               	retlw	97	;'a'
   262     0048  3469               	retlw	105	;'i'
   263     0049  346E               	retlw	110	;'n'
   264     004A  3400               	retlw	0
   265     004B                     STR_6:
   266     004B  3447               	retlw	71	;'G'
   267     004C  3461               	retlw	97	;'a'
   268     004D  3474               	retlw	116	;'t'
   269     004E  3465               	retlw	101	;'e'
   270     004F  3420               	retlw	32	;' '
   271     0050  3469               	retlw	105	;'i'
   272     0051  3473               	retlw	115	;'s'
   273     0052  3420               	retlw	32	;' '
   274     0053  3443               	retlw	67	;'C'
   275     0054  346C               	retlw	108	;'l'
   276     0055  346F               	retlw	111	;'o'
   277     0056  3473               	retlw	115	;'s'
   278     0057  3465               	retlw	101	;'e'
   279     0058  3464               	retlw	100	;'d'
   280     0059  3400               	retlw	0
   281     005A                     STR_10:
   282     005A  3447               	retlw	71	;'G'
   283     005B  3461               	retlw	97	;'a'
   284     005C  3474               	retlw	116	;'t'
   285     005D  3465               	retlw	101	;'e'
   286     005E  3420               	retlw	32	;' '
   287     005F  3469               	retlw	105	;'i'
   288     0060  3473               	retlw	115	;'s'
   289     0061  3420               	retlw	32	;' '
   290     0062  344F               	retlw	79	;'O'
   291     0063  3470               	retlw	112	;'p'
   292     0064  3465               	retlw	101	;'e'
   293     0065  346E               	retlw	110	;'n'
   294     0066  3400               	retlw	0
   295     0067                     STR_7:
   296     0067  3453               	retlw	83	;'S'
   297     0068  3474               	retlw	116	;'t'
   298     0069  3461               	retlw	97	;'a'
   299     006A  3472               	retlw	114	;'r'
   300     006B  3420               	retlw	32	;' '
   301     006C  3479               	retlw	121	;'y'
   302     006D  346F               	retlw	111	;'o'
   303     006E  3472               	retlw	114	;'r'
   304     006F  3420               	retlw	32	;' '
   305     0070  3443               	retlw	67	;'C'
   306     0071  3461               	retlw	97	;'a'
   307     0072  3472               	retlw	114	;'r'
   308     0073  3400               	retlw	0
   309     0074                     STR_5:
   310     0074  3450               	retlw	80	;'P'
   311     0075  346C               	retlw	108	;'l'
   312     0076  3465               	retlw	101	;'e'
   313     0077  3461               	retlw	97	;'a'
   314     0078  3473               	retlw	115	;'s'
   315     0079  3465               	retlw	101	;'e'
   316     007A  3420               	retlw	32	;' '
   317     007B  3457               	retlw	87	;'W'
   318     007C  3461               	retlw	97	;'a'
   319     007D  3469               	retlw	105	;'i'
   320     007E  3474               	retlw	116	;'t'
   321     007F  3400               	retlw	0
   322     0080                     STR_9:
   323     0080  3454               	retlw	84	;'T'
   324     0081  3468               	retlw	104	;'h'
   325     0082  3461               	retlw	97	;'a'
   326     0083  346E               	retlw	110	;'n'
   327     0084  346B               	retlw	107	;'k'
   328     0085  3420               	retlw	32	;' '
   329     0086  3479               	retlw	121	;'y'
   330     0087  346F               	retlw	111	;'o'
   331     0088  3475               	retlw	117	;'u'
   332     0089  3400               	retlw	0
   333     008A                     STR_2:
   334     008A  3467               	retlw	103	;'g'
   335     008B  3461               	retlw	97	;'a'
   336     008C  3474               	retlw	116	;'t'
   337     008D  3465               	retlw	101	;'e'
   338     008E  3400               	retlw	0
   339                           
   340                           	psect	cinit
   341     07FC                     start_initialization:	
   342                           ; #config settings
   343                           
   344     07FC                     __initialization:
   345     07FC                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348     07FC                     __end_of__initialization:
   349     07FC  0183               	clrf	3
   350     07FD  120A  118A  2F12   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	cstackCOMMON
   353     0070                     __pcstackCOMMON:
   354     0070                     ?_LCD_command:
   355     0070                     ??_LCD_command:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_LCD_initialize:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ?_LCD_char:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ??_LCD_char:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ?_LCD_string:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_main:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 1 bytes @ 0x0
   375     0070                     	ds	2
   376     0072                     LCD_command@command:
   377     0072                     LCD_char@data:	
   378                           ; 1 bytes @ 0x2
   379                           
   380                           
   381                           ; 1 bytes @ 0x2
   382     0072                     	ds	1
   383     0073                     ??_LCD_initialize:
   384     0073                     ??_LCD_string:	
   385                           ; 1 bytes @ 0x3
   386                           
   387     0073                     LCD_string@i:	
   388                           ; 1 bytes @ 0x3
   389                           
   390                           
   391                           ; 2 bytes @ 0x3
   392     0073                     	ds	2
   393     0075                     LCD_string@str:
   394                           
   395                           ; 1 bytes @ 0x5
   396     0075                     	ds	1
   397     0076                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x6
   400     0076                     	ds	3
   401                           
   402                           	psect	maintext
   403     0712                     __pmaintext:	
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 77 in file "newmain.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : B00/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          3       0       0       0       0
   426 ;;      Totals:         3       0       0       0       0
   427 ;;Total ram usage:        3 bytes
   428 ;; Hardware stack levels required when called: 2
   429 ;; This function calls:
   430 ;;		_LCD_command
   431 ;;		_LCD_initialize
   432 ;;		_LCD_string
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438     0712                     _main:	
   439                           ;psect for function _main
   440                           
   441     0712                     l743:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;newmain.c: 78:     LCD_initialize();
   447     0712  120A  118A  26D2  120A  118A  	fcall	_LCD_initialize
   448     0717                     l40:	
   449                           ;newmain.c: 81:     while(1){
   450                           
   451                           
   452                           ;newmain.c: 82:     LCD_command(0x80);
   453     0717  3080               	movlw	128
   454     0718  120A  118A  2660  120A  118A  	fcall	_LCD_command
   455     071D                     l745:
   456                           
   457                           ;newmain.c: 83:     LCD_string("Railway Crossing");
   458     071D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   459     071E  120A  118A  263B  120A  118A  	fcall	_LCD_string
   460     0723                     l747:
   461                           
   462                           ;newmain.c: 84:     LCD_command(0xc0);
   463     0723  30C0               	movlw	192
   464     0724  120A  118A  2660  120A  118A  	fcall	_LCD_command
   465                           
   466                           ;newmain.c: 85:     LCD_string("gate");
   467     0729  3082               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   468     072A  120A  118A  263B  120A  118A  	fcall	_LCD_string
   469     072F                     l749:
   470                           
   471                           ;newmain.c: 86:     TRISD=0x00;
   472     072F  1683               	bsf	3,5	;RP0=1, select bank1
   473     0730  1303               	bcf	3,6	;RP1=0, select bank1
   474     0731  0188               	clrf	8	;volatile
   475     0732                     l751:
   476                           
   477                           ;newmain.c: 87:     TRISC=0b11111111;
   478     0732  30FF               	movlw	255
   479     0733  0087               	movwf	7	;volatile
   480     0734                     l753:
   481                           
   482                           ;newmain.c: 88:     TRISB=0b00000000;
   483     0734  0186               	clrf	6	;volatile
   484     0735                     l755:
   485                           
   486                           ;newmain.c: 89:     PORTB=0b00010100;
   487     0735  3014               	movlw	20
   488     0736  1283               	bcf	3,5	;RP0=0, select bank0
   489     0737  1303               	bcf	3,6	;RP1=0, select bank0
   490     0738  0086               	movwf	6	;volatile
   491     0739                     l757:
   492                           
   493                           ;newmain.c: 91: if(PORTC==1){
   494     0739  0307               	decf	7,w	;volatile
   495     073A  1D03               	btfss	3,2
   496     073B  2F3D               	goto	u71
   497     073C  2F3E               	goto	u70
   498     073D                     u71:
   499     073D  2F95               	goto	l783
   500     073E                     u70:
   501     073E                     l759:
   502                           
   503                           ;newmain.c: 92: LCD_command(0x80);
   504     073E  3080               	movlw	128
   505     073F  120A  118A  2660  120A  118A  	fcall	_LCD_command
   506     0744                     l761:
   507                           
   508                           ;newmain.c: 93: LCD_string("Attantion train");
   509     0744  3033               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   510     0745  120A  118A  263B  120A  118A  	fcall	_LCD_string
   511     074A                     l763:
   512                           
   513                           ;newmain.c: 94: LCD_command(0xc0);
   514     074A  30C0               	movlw	192
   515     074B  120A  118A  2660  120A  118A  	fcall	_LCD_command
   516                           
   517                           ;newmain.c: 95: LCD_string("Near to crossing");
   518     0750  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   519     0751  120A  118A  263B  120A  118A  	fcall	_LCD_string
   520     0756                     l765:
   521                           
   522                           ;newmain.c: 96: _delay((unsigned long)((10)*(20000000/4000.0)));
   523     0756  3041               	movlw	65
   524     0757  00F7               	movwf	??_main+1
   525     0758  30EE               	movlw	238
   526     0759  00F6               	movwf	??_main
   527     075A                     u97:
   528     075A  0BF6               	decfsz	??_main,f
   529     075B  2F5A               	goto	u97
   530     075C  0BF7               	decfsz	??_main+1,f
   531     075D  2F5A               	goto	u97
   532     075E  0000               	nop
   533     075F                     l767:
   534                           
   535                           ;newmain.c: 97: PORTB=0b10101001;
   536     075F  30A9               	movlw	169
   537     0760  1283               	bcf	3,5	;RP0=0, select bank0
   538     0761  1303               	bcf	3,6	;RP1=0, select bank0
   539     0762  0086               	movwf	6	;volatile
   540     0763                     l769:
   541                           
   542                           ;newmain.c: 98: _delay((unsigned long)((10)*(20000000/4000.0)));
   543     0763  3041               	movlw	65
   544     0764  00F7               	movwf	??_main+1
   545     0765  30EE               	movlw	238
   546     0766  00F6               	movwf	??_main
   547     0767                     u107:
   548     0767  0BF6               	decfsz	??_main,f
   549     0768  2F67               	goto	u107
   550     0769  0BF7               	decfsz	??_main+1,f
   551     076A  2F67               	goto	u107
   552     076B  0000               	nop
   553     076C                     l771:
   554                           
   555                           ;newmain.c: 99: PORTB=0b00001001;
   556     076C  3009               	movlw	9
   557     076D  1283               	bcf	3,5	;RP0=0, select bank0
   558     076E  1303               	bcf	3,6	;RP1=0, select bank0
   559     076F  0086               	movwf	6	;volatile
   560     0770                     l773:
   561                           
   562                           ;newmain.c: 100: _delay((unsigned long)((1000)*(20000000/4000.0)));
   563     0770  301A               	movlw	26
   564     0771  00F8               	movwf	??_main+2
   565     0772  305E               	movlw	94
   566     0773  00F7               	movwf	??_main+1
   567     0774  306E               	movlw	110
   568     0775  00F6               	movwf	??_main
   569     0776                     u117:
   570     0776  0BF6               	decfsz	??_main,f
   571     0777  2F76               	goto	u117
   572     0778  0BF7               	decfsz	??_main+1,f
   573     0779  2F76               	goto	u117
   574     077A  0BF8               	decfsz	??_main+2,f
   575     077B  2F76               	goto	u117
   576     077C  0000               	nop
   577     077D                     l775:
   578                           
   579                           ;newmain.c: 101: LCD_command(0x80);
   580     077D  3080               	movlw	128
   581     077E  120A  118A  2660  120A  118A  	fcall	_LCD_command
   582     0783                     l777:
   583                           
   584                           ;newmain.c: 102: LCD_string("Please Wait");
   585     0783  306C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   586     0784  120A  118A  263B  120A  118A  	fcall	_LCD_string
   587     0789                     l779:
   588                           
   589                           ;newmain.c: 103: LCD_command(0xc0);
   590     0789  30C0               	movlw	192
   591     078A  120A  118A  2660  120A  118A  	fcall	_LCD_command
   592     078F                     l781:
   593                           
   594                           ;newmain.c: 104: LCD_string("Gate is Closed");
   595     078F  3043               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   596     0790  120A  118A  263B  120A  118A  	fcall	_LCD_string
   597     0795                     l783:
   598                           
   599                           ;newmain.c: 106: if(PORTC==2){
   600     0795  3002               	movlw	2
   601     0796  1283               	bcf	3,5	;RP0=0, select bank0
   602     0797  1303               	bcf	3,6	;RP1=0, select bank0
   603     0798  0607               	xorwf	7,w	;volatile
   604     0799  1D03               	btfss	3,2
   605     079A  2F9C               	goto	u81
   606     079B  2F9D               	goto	u80
   607     079C                     u81:
   608     079C  2F17               	goto	l40
   609     079D                     u80:
   610     079D                     l785:
   611                           
   612                           ;newmain.c: 107: LCD_command(0x80);
   613     079D  3080               	movlw	128
   614     079E  120A  118A  2660  120A  118A  	fcall	_LCD_command
   615     07A3                     l787:
   616                           
   617                           ;newmain.c: 108: LCD_string("Star yor Car");
   618     07A3  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   619     07A4  120A  118A  263B  120A  118A  	fcall	_LCD_string
   620     07A9                     l789:
   621                           
   622                           ;newmain.c: 109: LCD_command(0xc0);
   623     07A9  30C0               	movlw	192
   624     07AA  120A  118A  2660  120A  118A  	fcall	_LCD_command
   625                           
   626                           ;newmain.c: 110: LCD_string("Gate is Opening");
   627     07AF  3023               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   628     07B0  120A  118A  263B  120A  118A  	fcall	_LCD_string
   629     07B5                     l791:
   630                           
   631                           ;newmain.c: 111: _delay((unsigned long)((10)*(20000000/4000.0)));
   632     07B5  3041               	movlw	65
   633     07B6  00F7               	movwf	??_main+1
   634     07B7  30EE               	movlw	238
   635     07B8  00F6               	movwf	??_main
   636     07B9                     u127:
   637     07B9  0BF6               	decfsz	??_main,f
   638     07BA  2FB9               	goto	u127
   639     07BB  0BF7               	decfsz	??_main+1,f
   640     07BC  2FB9               	goto	u127
   641     07BD  0000               	nop
   642     07BE                     l793:
   643                           
   644                           ;newmain.c: 112: PORTB=0b11000010;
   645     07BE  30C2               	movlw	194
   646     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   647     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   648     07C1  0086               	movwf	6	;volatile
   649     07C2                     l795:
   650                           
   651                           ;newmain.c: 113: _delay((unsigned long)((10)*(20000000/4000.0)));
   652     07C2  3041               	movlw	65
   653     07C3  00F7               	movwf	??_main+1
   654     07C4  30EE               	movlw	238
   655     07C5  00F6               	movwf	??_main
   656     07C6                     u137:
   657     07C6  0BF6               	decfsz	??_main,f
   658     07C7  2FC6               	goto	u137
   659     07C8  0BF7               	decfsz	??_main+1,f
   660     07C9  2FC6               	goto	u137
   661     07CA  0000               	nop
   662     07CB                     l797:
   663                           
   664                           ;newmain.c: 114: PORTB=0b00010010;
   665     07CB  3012               	movlw	18
   666     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   667     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   668     07CE  0086               	movwf	6	;volatile
   669     07CF                     l799:
   670                           
   671                           ;newmain.c: 115: _delay((unsigned long)((1000)*(20000000/4000.0)));
   672     07CF  301A               	movlw	26
   673     07D0  00F8               	movwf	??_main+2
   674     07D1  305E               	movlw	94
   675     07D2  00F7               	movwf	??_main+1
   676     07D3  306E               	movlw	110
   677     07D4  00F6               	movwf	??_main
   678     07D5                     u147:
   679     07D5  0BF6               	decfsz	??_main,f
   680     07D6  2FD5               	goto	u147
   681     07D7  0BF7               	decfsz	??_main+1,f
   682     07D8  2FD5               	goto	u147
   683     07D9  0BF8               	decfsz	??_main+2,f
   684     07DA  2FD5               	goto	u147
   685     07DB  0000               	nop
   686     07DC                     l801:
   687                           
   688                           ;newmain.c: 116: PORTB=0b00010100;
   689     07DC  3014               	movlw	20
   690     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   691     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   692     07DF  0086               	movwf	6	;volatile
   693     07E0                     l803:
   694                           
   695                           ;newmain.c: 117: LCD_command(0x80);
   696     07E0  3080               	movlw	128
   697     07E1  120A  118A  2660  120A  118A  	fcall	_LCD_command
   698     07E6                     l805:
   699                           
   700                           ;newmain.c: 118: LCD_string("Thank you");
   701     07E6  3078               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   702     07E7  120A  118A  263B  120A  118A  	fcall	_LCD_string
   703                           
   704                           ;newmain.c: 119: LCD_command(0xc0);
   705     07EC  30C0               	movlw	192
   706     07ED  120A  118A  2660  120A  118A  	fcall	_LCD_command
   707     07F2                     l807:
   708                           
   709                           ;newmain.c: 120: LCD_string("Gate is Open");
   710     07F2  3052               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   711     07F3  120A  118A  263B  120A  118A  	fcall	_LCD_string
   712     07F8  2F17               	goto	l40
   713     07F9  120A  118A  2800   	ljmp	start
   714     07FC                     __end_of_main:
   715                           
   716                           	psect	text1
   717     063B                     __ptext1:	
   718 ;; *************** function _LCD_string *****************
   719 ;; Defined at:
   720 ;;		line 71 in file "newmain.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  str             1    wreg     PTR const unsigned char 
   723 ;;		 -> STR_10(13), STR_9(10), STR_8(16), STR_7(13), 
   724 ;;		 -> STR_6(15), STR_5(12), STR_4(17), STR_3(16), 
   725 ;;		 -> STR_2(5), STR_1(17), 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  str             1    5[COMMON] PTR const unsigned char 
   728 ;;		 -> STR_10(13), STR_9(10), STR_8(16), STR_7(13), 
   729 ;;		 -> STR_6(15), STR_5(12), STR_4(17), STR_3(16), 
   730 ;;		 -> STR_2(5), STR_1(17), 
   731 ;;  i               2    3[COMMON] int 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         3       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0
   744 ;;      Totals:         3       0       0       0       0
   745 ;;Total ram usage:        3 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 1
   748 ;; This function calls:
   749 ;;		_LCD_char
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755     063B                     _LCD_string:	
   756                           ;psect for function _LCD_string
   757                           
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _LCD_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   761                           ;LCD_string@str stored from wreg
   762     063B  00F5               	movwf	LCD_string@str
   763     063C                     l735:
   764                           
   765                           ;newmain.c: 72:     for (int i = 0; str[i] != '\0'; i++) {
   766     063C  01F3               	clrf	LCD_string@i
   767     063D  01F4               	clrf	LCD_string@i+1
   768     063E  2E52               	goto	l741
   769     063F                     l737:
   770                           
   771                           ;newmain.c: 73:         LCD_char(str[i]);
   772     063F  0873               	movf	LCD_string@i,w
   773     0640  0775               	addwf	LCD_string@str,w
   774     0641  0084               	movwf	4
   775     0642  120A  118A  2003  120A  118A  	fcall	stringdir
   776     0647  120A  118A  2699  120A  118A  	fcall	_LCD_char
   777     064C                     l739:
   778                           
   779                           ;newmain.c: 74:     }
   780     064C  3001               	movlw	1
   781     064D  07F3               	addwf	LCD_string@i,f
   782     064E  1803               	skipnc
   783     064F  0AF4               	incf	LCD_string@i+1,f
   784     0650  3000               	movlw	0
   785     0651  07F4               	addwf	LCD_string@i+1,f
   786     0652                     l741:
   787     0652  0873               	movf	LCD_string@i,w
   788     0653  0775               	addwf	LCD_string@str,w
   789     0654  0084               	movwf	4
   790     0655  120A  118A  2003  120A  118A  	fcall	stringdir
   791     065A  3A00               	xorlw	0
   792     065B  1D03               	skipz
   793     065C  2E5E               	goto	u61
   794     065D  2E5F               	goto	u60
   795     065E                     u61:
   796     065E  2E3F               	goto	l737
   797     065F                     u60:
   798     065F                     l35:
   799     065F  0008               	return
   800     0660                     __end_of_LCD_string:
   801                           
   802                           	psect	text2
   803     0699                     __ptext2:	
   804 ;; *************** function _LCD_char *****************
   805 ;; Defined at:
   806 ;;		line 52 in file "newmain.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  data            1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  data            1    2[COMMON] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0
   822 ;;      Temps:          2       0       0       0       0
   823 ;;      Totals:         3       0       0       0       0
   824 ;;Total ram usage:        3 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_LCD_string
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833     0699                     _LCD_char:	
   834                           ;psect for function _LCD_char
   835                           
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _LCD_char: [wreg+status,2+status,0]
   839                           ;LCD_char@data stored from wreg
   840     0699  00F2               	movwf	LCD_char@data
   841     069A                     l615:
   842                           
   843                           ;newmain.c: 53:     PORTD = (data & 0xF0);
   844     069A  0872               	movf	LCD_char@data,w
   845     069B  39F0               	andlw	240
   846     069C  1283               	bcf	3,5	;RP0=0, select bank0
   847     069D  1303               	bcf	3,6	;RP1=0, select bank0
   848     069E  0088               	movwf	8	;volatile
   849     069F                     l617:
   850                           
   851                           ;newmain.c: 54:     RD0 = 1;
   852     069F  1408               	bsf	8,0	;volatile
   853     06A0                     l619:
   854                           
   855                           ;newmain.c: 55:     RD1 = 0;
   856     06A0  1088               	bcf	8,1	;volatile
   857     06A1                     l621:
   858                           
   859                           ;newmain.c: 56:     RD2 = 1;
   860     06A1  1508               	bsf	8,2	;volatile
   861     06A2                     l623:
   862                           
   863                           ;newmain.c: 57:     _delay((unsigned long)((1)*(20000000/4000.0)));
   864     06A2  3007               	movlw	7
   865     06A3  00F1               	movwf	??_LCD_char+1
   866     06A4  307D               	movlw	125
   867     06A5  00F0               	movwf	??_LCD_char
   868     06A6                     u157:
   869     06A6  0BF0               	decfsz	??_LCD_char,f
   870     06A7  2EA6               	goto	u157
   871     06A8  0BF1               	decfsz	??_LCD_char+1,f
   872     06A9  2EA6               	goto	u157
   873     06AA                     l625:
   874                           
   875                           ;newmain.c: 58:     RD2 = 0;
   876     06AA  1283               	bcf	3,5	;RP0=0, select bank0
   877     06AB  1303               	bcf	3,6	;RP1=0, select bank0
   878     06AC  1108               	bcf	8,2	;volatile
   879     06AD                     l627:
   880                           
   881                           ;newmain.c: 59:     _delay((unsigned long)((1)*(20000000/4000.0)));
   882     06AD  3007               	movlw	7
   883     06AE  00F1               	movwf	??_LCD_char+1
   884     06AF  307D               	movlw	125
   885     06B0  00F0               	movwf	??_LCD_char
   886     06B1                     u167:
   887     06B1  0BF0               	decfsz	??_LCD_char,f
   888     06B2  2EB1               	goto	u167
   889     06B3  0BF1               	decfsz	??_LCD_char+1,f
   890     06B4  2EB1               	goto	u167
   891     06B5                     l629:
   892                           
   893                           ;newmain.c: 61:     PORTD = ((data << 4) & 0xF0);
   894     06B5  0872               	movf	LCD_char@data,w
   895     06B6  00F0               	movwf	??_LCD_char
   896     06B7  3003               	movlw	3
   897     06B8                     u25:
   898     06B8  1003               	clrc
   899     06B9  0DF0               	rlf	??_LCD_char,f
   900     06BA  3EFF               	addlw	-1
   901     06BB  1D03               	skipz
   902     06BC  2EB8               	goto	u25
   903     06BD  1003               	clrc
   904     06BE  0D70               	rlf	??_LCD_char,w
   905     06BF  39F0               	andlw	240
   906     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   907     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   908     06C2  0088               	movwf	8	;volatile
   909     06C3                     l631:
   910                           
   911                           ;newmain.c: 62:     RD2 = 1;
   912     06C3  1508               	bsf	8,2	;volatile
   913     06C4                     l633:
   914                           
   915                           ;newmain.c: 63:     RD0 = 1;
   916     06C4  1408               	bsf	8,0	;volatile
   917     06C5                     l635:
   918                           
   919                           ;newmain.c: 64:     RD1 = 0;
   920     06C5  1088               	bcf	8,1	;volatile
   921     06C6                     l637:
   922                           
   923                           ;newmain.c: 65:     _delay((unsigned long)((1)*(20000000/4000.0)));
   924     06C6  3007               	movlw	7
   925     06C7  00F1               	movwf	??_LCD_char+1
   926     06C8  307D               	movlw	125
   927     06C9  00F0               	movwf	??_LCD_char
   928     06CA                     u177:
   929     06CA  0BF0               	decfsz	??_LCD_char,f
   930     06CB  2ECA               	goto	u177
   931     06CC  0BF1               	decfsz	??_LCD_char+1,f
   932     06CD  2ECA               	goto	u177
   933     06CE                     l639:
   934                           
   935                           ;newmain.c: 66:     RD2 = 0;
   936     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   937     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   938     06D0  1108               	bcf	8,2	;volatile
   939     06D1                     l29:
   940     06D1  0008               	return
   941     06D2                     __end_of_LCD_char:
   942                           
   943                           	psect	text3
   944     06D2                     __ptext3:	
   945 ;; *************** function _LCD_initialize *****************
   946 ;; Defined at:
   947 ;;		line 38 in file "newmain.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          2       0       0       0       0
   964 ;;      Totals:         2       0       0       0       0
   965 ;;Total ram usage:        2 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 1
   968 ;; This function calls:
   969 ;;		_LCD_command
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975     06D2                     _LCD_initialize:	
   976                           ;psect for function _LCD_initialize
   977                           
   978     06D2                     l641:	
   979                           ;incstack = 0
   980                           ; Regs used in _LCD_initialize: [wreg+status,2+status,0+pclath+cstack]
   981                           
   982                           
   983                           ;newmain.c: 39:     TRISD = 0x00;
   984     06D2  1683               	bsf	3,5	;RP0=1, select bank1
   985     06D3  1303               	bcf	3,6	;RP1=0, select bank1
   986     06D4  0188               	clrf	8	;volatile
   987     06D5                     l643:
   988                           
   989                           ;newmain.c: 40:     _delay((unsigned long)((15)*(20000000/4000.0)));
   990     06D5  3062               	movlw	98
   991     06D6  00F4               	movwf	??_LCD_initialize+1
   992     06D7  3065               	movlw	101
   993     06D8  00F3               	movwf	??_LCD_initialize
   994     06D9                     u187:
   995     06D9  0BF3               	decfsz	??_LCD_initialize,f
   996     06DA  2ED9               	goto	u187
   997     06DB  0BF4               	decfsz	??_LCD_initialize+1,f
   998     06DC  2ED9               	goto	u187
   999     06DD  2EDE               	nop2
  1000     06DE                     l645:
  1001                           
  1002                           ;newmain.c: 41:     LCD_command(0x02);
  1003     06DE  3002               	movlw	2
  1004     06DF  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1005     06E4                     l647:
  1006                           
  1007                           ;newmain.c: 42:     LCD_command(0x28);
  1008     06E4  3028               	movlw	40
  1009     06E5  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1010     06EA                     l649:
  1011                           
  1012                           ;newmain.c: 43:     LCD_command(0x0E);
  1013     06EA  300E               	movlw	14
  1014     06EB  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1015     06F0                     l651:
  1016                           
  1017                           ;newmain.c: 44:     LCD_command(0x0C);
  1018     06F0  300C               	movlw	12
  1019     06F1  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1020     06F6                     l653:
  1021                           
  1022                           ;newmain.c: 45:     LCD_command(0x01);
  1023     06F6  3001               	movlw	1
  1024     06F7  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1025     06FC                     l655:
  1026                           
  1027                           ;newmain.c: 46:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1028     06FC  300D               	movlw	13
  1029     06FD  00F4               	movwf	??_LCD_initialize+1
  1030     06FE  30FB               	movlw	251
  1031     06FF  00F3               	movwf	??_LCD_initialize
  1032     0700                     u197:
  1033     0700  0BF3               	decfsz	??_LCD_initialize,f
  1034     0701  2F00               	goto	u197
  1035     0702  0BF4               	decfsz	??_LCD_initialize+1,f
  1036     0703  2F00               	goto	u197
  1037     0704  2F05               	nop2
  1038     0705                     l657:
  1039                           
  1040                           ;newmain.c: 47:     LCD_command(0x06);
  1041     0705  3006               	movlw	6
  1042     0706  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1043     070B                     l659:
  1044                           
  1045                           ;newmain.c: 48:     LCD_command(0x80);
  1046     070B  3080               	movlw	128
  1047     070C  120A  118A  2660  120A  118A  	fcall	_LCD_command
  1048     0711                     l26:
  1049     0711  0008               	return
  1050     0712                     __end_of_LCD_initialize:
  1051                           
  1052                           	psect	text4
  1053     0660                     __ptext4:	
  1054 ;; *************** function _LCD_command *****************
  1055 ;; Defined at:
  1056 ;;		line 18 in file "newmain.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  command         1    wreg     unsigned char 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  command         1    2[COMMON] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       0       0       0       0
  1071 ;;      Locals:         1       0       0       0       0
  1072 ;;      Temps:          2       0       0       0       0
  1073 ;;      Totals:         3       0       0       0       0
  1074 ;;Total ram usage:        3 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_LCD_initialize
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084     0660                     _LCD_command:	
  1085                           ;psect for function _LCD_command
  1086                           
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in _LCD_command: [wreg+status,2+status,0]
  1090                           ;LCD_command@command stored from wreg
  1091     0660  00F2               	movwf	LCD_command@command
  1092     0661                     l589:
  1093                           
  1094                           ;newmain.c: 19:     PORTD = (command & 0xF0);
  1095     0661  0872               	movf	LCD_command@command,w
  1096     0662  39F0               	andlw	240
  1097     0663  1283               	bcf	3,5	;RP0=0, select bank0
  1098     0664  1303               	bcf	3,6	;RP1=0, select bank0
  1099     0665  0088               	movwf	8	;volatile
  1100     0666                     l591:
  1101                           
  1102                           ;newmain.c: 20:     RD0 = 0;
  1103     0666  1008               	bcf	8,0	;volatile
  1104     0667                     l593:
  1105                           
  1106                           ;newmain.c: 21:     RD1 = 0;
  1107     0667  1088               	bcf	8,1	;volatile
  1108     0668                     l595:
  1109                           
  1110                           ;newmain.c: 22:     RD2 = 1;
  1111     0668  1508               	bsf	8,2	;volatile
  1112     0669                     l597:
  1113                           
  1114                           ;newmain.c: 24:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1115     0669  3007               	movlw	7
  1116     066A  00F1               	movwf	??_LCD_command+1
  1117     066B  307D               	movlw	125
  1118     066C  00F0               	movwf	??_LCD_command
  1119     066D                     u207:
  1120     066D  0BF0               	decfsz	??_LCD_command,f
  1121     066E  2E6D               	goto	u207
  1122     066F  0BF1               	decfsz	??_LCD_command+1,f
  1123     0670  2E6D               	goto	u207
  1124     0671                     l599:
  1125                           
  1126                           ;newmain.c: 25:     RD2 = 0;
  1127     0671  1283               	bcf	3,5	;RP0=0, select bank0
  1128     0672  1303               	bcf	3,6	;RP1=0, select bank0
  1129     0673  1108               	bcf	8,2	;volatile
  1130     0674                     l601:
  1131                           
  1132                           ;newmain.c: 26:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1133     0674  3007               	movlw	7
  1134     0675  00F1               	movwf	??_LCD_command+1
  1135     0676  307D               	movlw	125
  1136     0677  00F0               	movwf	??_LCD_command
  1137     0678                     u217:
  1138     0678  0BF0               	decfsz	??_LCD_command,f
  1139     0679  2E78               	goto	u217
  1140     067A  0BF1               	decfsz	??_LCD_command+1,f
  1141     067B  2E78               	goto	u217
  1142     067C                     l603:
  1143                           
  1144                           ;newmain.c: 28:     PORTD = ((command << 4) & 0xF0);
  1145     067C  0872               	movf	LCD_command@command,w
  1146     067D  00F0               	movwf	??_LCD_command
  1147     067E  3003               	movlw	3
  1148     067F                     u15:
  1149     067F  1003               	clrc
  1150     0680  0DF0               	rlf	??_LCD_command,f
  1151     0681  3EFF               	addlw	-1
  1152     0682  1D03               	skipz
  1153     0683  2E7F               	goto	u15
  1154     0684  1003               	clrc
  1155     0685  0D70               	rlf	??_LCD_command,w
  1156     0686  39F0               	andlw	240
  1157     0687  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0688  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0689  0088               	movwf	8	;volatile
  1160     068A                     l605:
  1161                           
  1162                           ;newmain.c: 29:     RD2 = 1;
  1163     068A  1508               	bsf	8,2	;volatile
  1164     068B                     l607:
  1165                           
  1166                           ;newmain.c: 30:     RD0 = 0;
  1167     068B  1008               	bcf	8,0	;volatile
  1168     068C                     l609:
  1169                           
  1170                           ;newmain.c: 31:     RD1 = 0;
  1171     068C  1088               	bcf	8,1	;volatile
  1172     068D                     l611:
  1173                           
  1174                           ;newmain.c: 32:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1175     068D  3007               	movlw	7
  1176     068E  00F1               	movwf	??_LCD_command+1
  1177     068F  307D               	movlw	125
  1178     0690  00F0               	movwf	??_LCD_command
  1179     0691                     u227:
  1180     0691  0BF0               	decfsz	??_LCD_command,f
  1181     0692  2E91               	goto	u227
  1182     0693  0BF1               	decfsz	??_LCD_command+1,f
  1183     0694  2E91               	goto	u227
  1184     0695                     l613:
  1185                           
  1186                           ;newmain.c: 33:     RD2 = 0;
  1187     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1188     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1189     0697  1108               	bcf	8,2	;volatile
  1190     0698                     l23:
  1191     0698  0008               	return
  1192     0699                     __end_of_LCD_command:
  1193     007E                     btemp	set	126	;btemp
  1194     007E                     wtemp0	set	126

Data Sizes:
    Strings     134
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_string@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_10(CODE[13]), STR_2(CODE[5]), STR_3(CODE[16]), 
		 -> STR_4(CODE[17]), STR_5(CODE[12]), STR_6(CODE[15]), STR_7(CODE[13]), 
		 -> STR_8(CODE[16]), STR_9(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_string
    _LCD_string->_LCD_char
    _LCD_initialize->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     510
                                              6 COMMON     3     3      0
                        _LCD_command
                     _LCD_initialize
                         _LCD_string
 ---------------------------------------------------------------------------------
 (1) _LCD_string                                           3     3      0     450
                                              3 COMMON     3     3      0
                           _LCD_char
 ---------------------------------------------------------------------------------
 (2) _LCD_char                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       2     2      0      30
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
   _LCD_initialize
     _LCD_command
   _LCD_string
     _LCD_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 08 23:05:47 2023

                      pc 0002                       l23 0698                       l40 0717  
                     l26 0711                       l35 065F                       l29 06D1  
                     u15 067F                       u25 06B8                       u60 065F  
                     u61 065E                       u70 073E                       u71 073D  
                     u80 079D                       u81 079C                       u97 075A  
                     fsr 0004                      l601 0674                      l611 068D  
                    l603 067C                      l613 0695                      l605 068A  
                    l621 06A1                      l607 068B                      l631 06C3  
                    l623 06A2                      l615 069A                      l609 068C  
                    l641 06D2                      l633 06C4                      l625 06AA  
                    l617 069F                      l801 07DC                      l651 06F0  
                    l643 06D5                      l635 06C5                      l627 06AD  
                    l619 06A0                      l803 07E0                      l653 06F6  
                    l645 06DE                      l637 06C6                      l629 06B5  
                    l741 0652                      l805 07E6                      l591 0666  
                    l655 06FC                      l647 06E4                      l639 06CE  
                    l735 063C                      l807 07F2                      l751 0732  
                    l743 0712                      l593 0667                      l657 0705  
                    l649 06EA                      l737 063F                      l761 0744  
                    l753 0734                      l745 071D                      l595 0668  
                    l659 070B                      l739 064C                      l771 076C  
                    l763 074A                      l755 0735                      l747 0723  
                    l597 0669                      l589 0661                      l781 078F  
                    l773 0770                      l765 0756                      l757 0739  
                    l749 072F                      l599 0671                      l791 07B5  
                    l775 077D                      l767 075F                      l759 073E  
                    l783 0795                      l793 07BE                      l785 079D  
                    l777 0783                      l769 0763                      l795 07C2  
                    l787 07A3                      l779 0789                      l797 07CB  
                    l789 07A9                      l799 07CF                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      u107 0767  
                    u117 0776                      u207 066D                      u127 07B9  
                    u217 0678                      u137 07C6                      u227 0691  
                    u147 07D5                      u157 06A6                      u167 06B1  
                    u177 06CA                      u187 06D9                      u197 0700  
                    fsr0 0004              ?_LCD_string 0070                     STR_1 0009  
                   STR_2 008A                     STR_3 003B                     STR_4 001A  
                   STR_5 0074                     STR_6 004B                     STR_7 0067  
                   STR_8 002B                     STR_9 0080             ?_LCD_command 0070  
                   _main 0712                     btemp 007E                     start 0000  
       nosup@@$_$_CONFIG 0000         __end_of_LCD_char 06D2                    ?_main 0070  
                  STR_10 005A                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0076              LCD_string@i 0073             LCD_char@data 0072  
__end_of__initialization 07FC                ?_LCD_char 0070           __pcstackCOMMON 0070  
         _LCD_initialize 06D2             ??_LCD_string 0073               ??_LCD_char 0070  
             __pmaintext 0712   __end_of_LCD_initialize 0712       __end_of_LCD_string 0660  
             __stringtab 0003          ?_LCD_initialize 0070                  __ptext1 063B  
                __ptext2 0699                  __ptext3 06D2                  __ptext4 0660  
   end_of_initialization 07FC      start_initialization 07FC            ??_LCD_command 0070  
              ___latbits 0002         ??_LCD_initialize 0073      __end_of_LCD_command 0699  
          LCD_string@str 0075                __pstrings 0003                 _LCD_char 0699  
            __stringbase 0008              _LCD_command 0660       __end_of__stringtab 0009  
             _LCD_string 063B       LCD_command@command 0072                stringcode 0003  
               stringdir 0003                 stringtab 0003  
